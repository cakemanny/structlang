fn f1(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f2(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f3(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f4(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f5(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f6(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f7(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f8(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f9(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f10(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f11(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f12(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f13(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f14(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f15(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f16(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f17(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f18(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f19(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f20(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f21(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f22(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f23(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f24(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f25(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f26(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f27(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f28(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f29(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f30(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f31(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f32(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f33(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f34(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f35(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f36(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f37(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f38(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f39(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f40(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f41(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f42(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f43(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f44(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f45(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f46(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f47(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f48(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f49(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f50(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f51(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f52(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f53(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f54(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f55(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f56(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f57(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f58(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f59(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f60(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f61(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f62(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f63(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f64(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f65(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f66(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f67(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f68(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f69(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f70(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f71(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f72(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f73(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f74(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f75(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f76(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f77(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f78(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f79(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f80(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f81(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f82(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f83(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f84(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f85(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f86(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f87(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f88(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f89(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f90(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f91(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f92(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f93(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f94(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f95(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f96(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f97(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f98(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f99(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f100(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f101(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f102(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f103(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f104(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f105(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f106(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f107(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f108(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f109(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f110(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f111(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f112(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f113(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f114(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f115(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f116(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f117(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f118(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f119(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f120(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f121(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f122(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f123(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f124(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f125(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f126(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f127(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f128(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f129(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f130(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f131(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f132(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f133(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f134(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f135(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f136(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f137(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f138(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f139(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f140(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f141(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f142(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f143(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f144(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f145(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f146(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f147(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f148(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f149(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f150(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f151(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f152(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f153(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f154(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f155(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f156(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f157(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f158(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f159(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f160(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f161(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f162(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f163(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f164(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f165(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f166(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f167(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f168(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f169(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f170(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f171(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f172(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f173(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f174(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f175(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f176(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f177(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f178(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f179(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f180(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f181(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f182(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f183(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f184(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f185(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f186(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f187(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f188(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f189(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f190(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f191(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f192(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f193(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f194(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f195(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f196(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f197(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f198(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f199(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f200(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f201(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f202(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f203(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f204(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f205(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f206(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f207(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f208(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f209(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f210(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f211(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f212(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f213(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f214(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f215(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f216(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f217(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f218(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f219(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f220(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f221(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f222(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f223(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f224(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f225(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f226(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f227(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f228(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f229(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f230(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f231(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f232(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f233(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f234(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f235(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f236(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f237(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f238(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f239(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f240(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f241(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f242(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f243(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f244(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f245(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f246(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f247(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f248(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f249(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f250(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f251(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f252(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f253(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f254(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f255(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f256(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f257(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f258(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f259(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f260(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f261(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f262(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f263(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f264(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f265(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f266(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f267(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f268(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f269(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f270(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f271(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f272(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f273(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f274(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f275(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f276(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f277(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f278(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f279(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f280(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f281(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f282(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f283(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f284(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f285(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f286(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f287(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f288(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f289(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f290(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f291(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f292(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f293(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f294(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f295(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f296(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f297(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f298(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f299(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f300(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f301(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f302(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f303(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f304(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f305(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f306(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f307(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f308(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f309(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f310(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f311(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f312(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f313(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f314(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f315(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f316(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f317(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f318(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f319(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f320(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f321(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f322(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f323(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f324(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f325(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f326(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f327(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f328(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f329(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f330(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f331(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f332(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f333(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f334(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f335(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f336(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f337(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f338(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f339(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f340(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f341(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f342(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f343(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f344(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f345(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f346(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f347(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f348(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f349(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f350(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f351(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f352(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f353(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f354(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f355(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f356(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f357(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f358(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f359(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f360(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f361(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f362(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f363(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f364(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f365(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f366(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f367(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f368(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f369(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f370(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f371(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f372(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f373(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f374(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f375(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f376(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f377(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f378(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f379(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f380(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f381(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f382(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f383(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f384(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f385(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f386(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f387(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f388(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f389(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f390(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f391(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f392(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f393(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f394(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f395(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f396(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f397(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f398(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f399(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f400(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f401(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f402(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f403(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f404(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f405(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f406(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f407(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f408(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f409(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f410(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f411(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f412(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f413(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f414(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f415(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f416(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f417(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f418(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f419(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f420(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f421(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f422(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f423(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f424(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f425(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f426(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f427(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f428(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f429(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f430(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f431(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f432(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f433(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f434(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f435(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f436(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f437(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f438(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f439(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f440(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f441(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f442(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f443(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f444(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f445(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f446(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f447(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f448(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f449(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f450(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f451(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f452(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f453(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f454(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f455(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f456(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f457(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f458(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f459(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f460(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f461(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f462(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f463(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f464(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f465(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f466(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f467(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f468(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f469(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f470(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f471(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f472(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f473(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f474(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f475(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f476(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f477(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f478(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f479(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f480(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f481(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f482(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f483(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f484(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f485(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f486(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f487(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f488(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f489(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f490(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f491(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f492(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f493(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f494(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f495(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f496(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f497(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f498(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f499(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f500(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f501(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f502(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f503(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f504(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f505(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f506(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f507(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f508(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f509(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f510(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f511(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f512(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f513(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f514(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f515(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f516(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f517(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f518(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f519(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f520(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f521(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f522(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f523(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f524(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f525(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f526(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f527(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f528(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f529(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f530(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f531(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f532(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f533(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f534(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f535(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f536(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f537(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f538(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f539(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f540(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f541(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f542(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f543(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f544(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f545(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f546(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f547(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f548(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f549(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f550(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f551(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f552(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f553(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f554(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f555(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f556(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f557(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f558(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f559(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f560(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f561(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f562(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f563(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f564(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f565(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f566(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f567(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f568(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f569(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f570(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f571(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f572(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f573(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f574(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f575(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f576(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f577(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f578(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f579(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f580(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f581(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f582(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f583(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f584(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f585(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f586(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f587(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f588(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f589(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f590(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f591(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f592(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f593(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f594(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f595(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f596(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f597(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f598(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f599(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f600(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f601(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f602(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f603(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f604(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f605(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f606(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f607(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f608(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f609(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f610(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f611(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f612(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f613(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f614(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f615(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f616(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f617(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f618(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f619(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f620(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f621(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f622(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f623(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f624(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f625(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f626(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f627(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f628(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f629(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f630(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f631(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f632(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f633(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f634(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f635(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f636(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f637(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f638(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f639(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f640(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f641(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f642(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f643(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f644(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f645(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f646(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f647(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f648(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f649(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f650(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f651(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f652(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f653(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f654(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f655(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f656(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f657(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f658(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f659(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f660(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f661(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f662(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f663(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f664(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f665(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f666(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f667(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f668(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f669(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f670(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f671(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f672(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f673(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f674(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f675(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f676(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f677(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f678(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f679(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f680(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f681(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f682(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f683(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f684(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f685(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f686(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f687(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f688(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f689(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f690(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f691(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f692(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f693(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f694(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f695(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f696(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f697(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f698(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f699(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f700(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f701(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f702(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f703(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f704(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f705(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f706(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f707(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f708(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f709(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f710(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f711(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f712(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f713(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f714(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f715(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f716(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f717(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f718(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f719(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f720(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f721(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f722(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f723(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f724(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f725(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f726(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f727(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f728(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f729(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f730(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f731(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f732(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f733(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f734(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f735(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f736(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f737(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f738(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f739(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f740(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f741(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f742(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f743(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f744(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f745(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f746(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f747(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f748(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f749(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f750(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f751(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f752(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f753(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f754(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f755(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f756(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f757(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f758(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f759(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f760(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f761(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f762(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f763(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f764(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f765(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f766(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f767(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f768(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f769(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f770(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f771(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f772(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f773(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f774(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f775(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f776(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f777(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f778(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f779(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f780(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f781(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f782(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f783(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f784(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f785(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f786(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f787(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f788(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f789(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f790(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f791(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f792(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f793(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f794(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f795(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f796(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f797(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f798(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f799(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f800(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f801(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f802(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f803(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f804(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f805(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f806(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f807(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f808(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f809(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f810(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f811(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f812(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f813(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f814(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f815(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f816(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f817(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f818(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f819(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f820(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f821(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f822(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f823(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f824(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f825(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f826(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f827(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f828(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f829(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f830(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f831(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f832(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f833(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f834(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f835(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f836(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f837(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f838(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f839(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f840(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f841(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f842(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f843(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f844(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f845(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f846(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f847(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f848(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f849(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f850(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f851(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f852(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f853(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f854(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f855(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f856(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f857(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f858(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f859(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f860(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f861(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f862(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f863(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f864(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f865(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f866(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f867(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f868(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f869(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f870(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f871(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f872(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f873(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f874(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f875(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f876(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f877(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f878(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f879(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f880(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f881(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f882(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f883(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f884(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f885(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f886(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f887(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f888(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f889(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f890(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f891(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f892(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f893(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f894(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f895(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f896(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f897(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f898(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f899(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f900(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f901(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f902(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f903(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f904(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f905(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f906(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f907(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f908(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f909(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f910(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f911(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f912(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f913(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f914(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f915(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f916(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f917(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f918(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f919(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f920(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f921(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f922(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f923(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f924(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f925(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f926(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f927(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f928(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f929(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f930(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f931(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f932(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f933(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f934(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f935(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f936(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f937(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f938(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f939(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f940(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f941(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f942(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f943(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f944(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f945(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f946(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f947(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f948(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f949(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f950(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f951(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f952(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f953(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f954(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f955(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f956(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f957(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f958(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f959(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f960(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f961(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f962(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f963(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f964(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f965(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f966(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f967(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f968(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f969(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f970(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f971(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f972(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f973(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f974(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f975(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f976(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f977(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f978(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f979(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f980(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f981(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f982(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f983(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f984(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f985(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f986(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f987(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f988(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f989(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f990(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f991(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f992(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f993(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f994(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f995(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f996(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f997(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f998(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f999(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1000(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1001(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1002(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1003(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1004(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1005(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1006(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1007(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1008(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1009(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1010(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1011(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1012(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1013(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1014(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1015(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1016(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1017(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1018(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1019(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1020(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1021(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1022(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1023(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1024(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1025(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1026(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1027(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1028(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1029(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1030(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1031(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1032(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1033(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1034(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1035(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1036(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1037(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1038(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1039(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1040(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1041(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1042(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1043(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1044(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1045(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1046(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1047(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1048(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1049(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1050(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1051(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1052(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1053(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1054(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1055(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1056(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1057(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1058(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1059(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1060(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1061(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1062(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1063(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1064(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1065(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1066(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1067(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1068(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1069(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1070(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1071(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1072(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1073(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1074(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1075(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1076(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1077(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1078(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1079(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1080(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1081(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1082(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1083(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1084(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1085(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1086(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1087(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1088(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1089(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1090(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1091(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1092(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1093(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1094(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1095(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1096(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1097(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1098(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1099(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1100(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1101(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1102(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1103(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1104(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1105(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1106(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1107(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1108(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1109(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1110(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1111(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1112(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1113(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1114(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1115(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1116(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1117(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1118(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1119(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1120(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1121(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1122(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1123(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1124(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1125(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1126(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1127(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1128(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1129(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1130(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1131(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1132(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1133(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1134(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1135(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1136(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1137(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1138(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1139(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1140(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1141(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1142(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1143(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1144(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1145(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1146(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1147(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1148(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1149(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1150(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1151(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1152(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1153(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1154(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1155(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1156(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1157(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1158(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1159(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1160(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1161(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1162(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1163(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1164(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1165(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1166(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1167(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1168(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1169(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1170(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1171(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1172(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1173(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1174(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1175(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1176(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1177(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1178(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1179(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1180(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1181(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1182(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1183(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1184(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1185(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1186(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1187(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1188(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1189(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1190(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1191(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1192(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1193(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1194(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1195(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1196(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1197(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1198(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1199(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1200(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1201(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1202(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1203(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1204(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1205(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1206(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1207(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1208(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1209(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1210(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1211(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1212(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1213(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1214(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1215(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1216(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1217(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1218(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1219(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1220(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1221(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1222(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1223(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1224(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1225(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1226(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1227(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1228(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1229(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1230(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1231(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1232(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1233(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1234(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1235(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1236(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1237(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1238(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1239(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1240(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1241(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1242(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1243(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1244(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1245(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1246(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1247(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1248(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1249(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1250(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1251(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1252(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1253(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1254(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1255(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1256(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1257(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1258(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1259(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1260(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1261(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1262(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1263(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1264(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1265(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1266(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1267(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1268(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1269(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1270(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1271(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1272(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1273(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1274(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1275(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1276(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1277(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1278(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1279(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1280(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1281(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1282(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1283(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1284(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1285(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1286(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1287(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1288(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1289(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1290(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1291(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1292(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1293(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1294(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1295(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1296(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1297(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1298(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1299(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1300(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1301(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1302(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1303(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1304(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1305(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1306(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1307(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1308(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1309(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1310(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1311(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1312(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1313(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1314(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1315(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1316(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1317(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1318(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1319(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1320(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1321(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1322(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1323(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1324(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1325(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1326(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1327(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1328(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1329(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1330(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1331(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1332(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1333(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1334(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1335(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1336(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1337(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1338(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1339(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1340(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1341(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1342(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1343(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1344(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1345(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1346(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1347(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1348(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1349(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1350(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1351(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1352(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1353(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1354(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1355(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1356(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1357(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1358(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1359(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1360(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1361(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1362(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1363(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1364(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1365(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1366(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1367(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1368(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1369(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1370(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1371(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1372(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1373(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1374(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1375(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1376(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1377(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1378(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1379(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1380(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1381(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1382(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1383(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1384(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1385(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1386(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1387(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1388(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1389(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1390(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1391(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1392(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1393(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1394(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1395(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1396(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1397(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1398(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1399(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1400(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1401(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1402(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1403(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1404(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1405(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1406(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1407(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1408(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1409(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1410(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1411(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1412(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1413(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1414(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1415(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1416(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1417(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1418(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1419(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1420(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1421(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1422(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1423(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1424(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1425(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1426(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1427(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1428(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1429(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1430(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1431(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1432(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1433(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1434(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1435(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1436(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1437(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1438(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1439(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1440(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1441(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1442(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1443(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1444(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1445(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1446(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1447(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1448(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1449(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1450(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1451(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1452(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1453(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1454(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1455(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1456(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1457(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1458(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1459(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1460(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1461(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1462(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1463(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1464(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1465(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1466(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1467(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1468(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1469(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1470(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1471(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1472(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1473(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1474(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1475(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1476(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1477(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1478(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1479(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1480(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1481(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1482(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1483(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1484(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1485(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1486(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1487(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1488(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1489(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1490(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1491(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1492(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1493(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1494(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1495(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1496(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1497(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1498(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1499(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1500(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1501(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1502(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1503(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1504(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1505(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1506(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1507(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1508(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1509(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1510(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1511(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1512(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1513(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1514(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1515(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1516(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1517(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1518(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1519(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1520(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1521(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1522(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1523(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1524(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1525(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1526(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1527(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1528(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1529(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1530(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1531(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1532(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1533(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1534(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1535(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1536(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1537(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1538(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1539(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1540(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1541(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1542(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1543(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1544(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1545(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1546(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1547(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1548(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1549(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1550(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1551(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1552(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1553(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1554(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1555(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1556(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1557(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1558(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1559(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1560(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1561(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1562(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1563(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1564(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1565(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1566(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1567(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1568(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1569(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1570(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1571(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1572(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1573(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1574(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1575(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1576(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1577(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1578(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1579(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1580(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1581(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1582(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1583(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1584(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1585(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1586(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1587(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1588(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1589(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1590(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1591(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1592(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1593(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1594(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1595(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1596(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1597(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1598(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1599(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1600(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1601(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1602(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1603(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1604(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1605(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1606(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1607(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1608(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1609(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1610(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1611(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1612(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1613(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1614(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1615(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1616(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1617(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1618(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1619(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1620(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1621(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1622(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1623(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1624(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1625(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1626(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1627(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1628(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1629(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1630(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1631(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1632(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1633(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1634(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1635(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1636(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1637(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1638(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1639(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1640(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1641(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1642(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1643(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1644(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1645(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1646(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1647(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1648(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1649(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1650(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1651(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1652(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1653(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1654(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1655(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1656(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1657(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1658(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1659(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1660(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1661(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1662(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1663(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1664(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1665(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1666(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1667(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1668(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1669(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1670(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1671(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1672(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1673(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1674(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1675(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1676(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1677(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1678(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1679(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1680(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1681(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1682(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1683(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1684(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1685(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1686(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1687(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1688(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1689(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1690(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1691(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1692(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1693(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1694(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1695(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1696(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1697(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1698(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1699(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1700(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1701(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1702(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1703(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1704(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1705(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1706(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1707(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1708(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1709(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1710(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1711(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1712(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1713(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1714(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1715(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1716(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1717(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1718(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1719(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1720(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1721(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1722(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1723(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1724(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1725(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1726(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1727(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1728(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1729(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1730(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1731(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1732(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1733(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1734(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1735(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1736(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1737(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1738(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1739(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1740(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1741(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1742(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1743(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1744(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1745(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1746(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1747(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1748(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1749(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1750(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1751(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1752(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1753(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1754(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1755(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1756(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1757(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1758(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1759(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1760(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1761(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1762(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1763(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1764(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1765(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1766(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1767(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1768(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1769(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1770(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1771(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1772(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1773(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1774(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1775(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1776(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1777(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1778(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1779(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1780(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1781(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1782(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1783(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1784(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1785(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1786(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1787(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1788(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1789(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1790(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1791(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1792(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1793(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1794(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1795(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1796(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1797(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1798(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1799(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1800(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1801(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1802(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1803(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1804(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1805(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1806(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1807(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1808(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1809(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1810(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1811(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1812(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1813(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1814(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1815(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1816(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1817(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1818(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1819(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1820(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1821(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1822(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1823(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1824(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1825(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1826(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1827(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1828(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1829(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1830(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1831(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1832(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1833(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1834(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1835(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1836(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1837(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1838(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1839(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1840(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1841(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1842(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1843(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1844(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1845(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1846(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1847(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1848(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1849(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1850(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1851(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1852(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1853(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1854(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1855(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1856(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1857(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1858(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1859(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1860(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1861(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1862(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1863(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1864(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1865(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1866(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1867(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1868(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1869(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1870(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1871(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1872(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1873(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1874(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1875(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1876(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1877(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1878(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1879(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1880(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1881(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1882(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1883(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1884(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1885(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1886(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1887(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1888(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1889(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1890(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1891(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1892(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1893(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1894(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1895(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1896(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1897(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1898(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1899(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1900(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1901(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1902(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1903(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1904(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1905(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1906(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1907(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1908(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1909(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1910(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1911(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1912(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1913(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1914(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1915(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1916(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1917(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1918(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1919(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1920(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1921(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1922(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1923(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1924(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1925(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1926(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1927(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1928(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1929(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1930(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1931(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1932(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1933(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1934(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1935(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1936(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1937(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1938(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1939(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1940(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1941(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1942(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1943(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1944(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1945(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1946(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1947(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1948(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1949(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1950(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1951(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1952(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1953(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1954(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1955(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1956(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1957(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1958(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1959(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1960(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1961(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1962(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1963(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1964(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1965(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1966(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1967(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1968(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1969(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1970(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1971(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1972(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1973(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1974(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1975(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1976(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1977(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1978(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1979(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1980(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1981(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1982(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1983(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1984(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1985(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1986(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1987(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1988(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1989(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1990(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1991(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1992(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1993(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1994(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1995(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1996(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1997(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1998(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f1999(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
fn f2000(a: int, b: int) -> int { let c: int = 9 * b; if (a == 0) { 2 * c } else { a + 2 * b } }
